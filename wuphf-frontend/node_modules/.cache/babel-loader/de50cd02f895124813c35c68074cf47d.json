{"ast":null,"code":"var _jsxFileName = \"/Users/BrandenColen/Git/wuphf/wuphf-frontend/src/components/WuphfForm/WuphfForm.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport wuphfSentAudioPath from '../../resources/audio/wuphf_wuphfalert.wav';\nimport './WuphfForm.css';\nconst wuphfSentAudio = new Audio(wuphfSentAudioPath);\nexport default class WuphfForm extends React.Component {\n  constructor(props) {\n    super(props);\n    var formFields = {};\n    this.props.formOptions.forEach(option => {\n      formFields[option.key] = '';\n    });\n    this.state = {\n      formFields: formFields,\n      errorMsg: '',\n      loading: true\n    };\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      errorMsg: '',\n      loading: true\n    });\n    var formData = new FormData();\n    this.props.formOptions.forEach(option => {\n      formData.append(option.key, this.state.formFields[option.key]);\n    });\n    axios.post('/api/wuphf', formData).then(response => {\n      if (response.data === 'OK') {\n        wuphfSentAudio.play();\n      }\n\n      this.setState({\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        errorMsg: error.response.data,\n        loading: false\n      });\n    });\n  }\n\n  handleChange(e) {\n    let formFields = { ...this.state.formFields\n    };\n    formFields[e.target.name] = e.target.value;\n    this.setState({\n      formFields\n    });\n  }\n\n  renderFormOptions() {\n    const {\n      formOptions\n    } = this.props;\n    let formUI = formOptions.map((option, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"wuphf-form-input-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"wuphf-form-label\",\n      htmlFor: option.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, option.labelText), option.inputType === 'textarea' ? React.createElement(\"textarea\", {\n      className: \"wuphf-form-textarea\",\n      id: option.key,\n      name: option.key,\n      placeholder: option.placeholder,\n      onChange: this.handleChange.bind(this),\n      value: this.state.formFields[option.key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(\"input\", {\n      className: \"wuphf-form-input\",\n      type: option.inputType,\n      id: option.key,\n      name: option.key,\n      placeholder: option.placeholder,\n      onChange: this.handleChange.bind(this),\n      value: this.state.formFields[option.key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n    return formUI;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wuphf-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.renderFormOptions(), React.createElement(\"button\", {\n      className: \"wuphf-submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Send Wuphf!\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.errorMsg), React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ClipLoader, {\n      size: 100,\n      color: '#0102fc',\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/BrandenColen/Git/wuphf/wuphf-frontend/src/components/WuphfForm/WuphfForm.js"],"names":["axios","React","ClipLoader","wuphfSentAudioPath","wuphfSentAudio","Audio","WuphfForm","Component","constructor","props","formFields","formOptions","forEach","option","key","state","errorMsg","loading","onFormSubmit","e","preventDefault","setState","formData","FormData","append","post","then","response","data","play","catch","error","handleChange","target","name","value","renderFormOptions","formUI","map","i","labelText","inputType","placeholder","bind","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport wuphfSentAudioPath from '../../resources/audio/wuphf_wuphfalert.wav';\nimport './WuphfForm.css';\n\nconst wuphfSentAudio = new Audio(wuphfSentAudioPath);\n\nexport default class WuphfForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var formFields = {};\n    this.props.formOptions.forEach(option => {\n      formFields[option.key] = '';\n    });\n\n    this.state = {\n      formFields: formFields,\n      errorMsg: '',\n      loading: true\n    };\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n\n    this.setState({\n      errorMsg: '',\n      loading: true\n    });\n\n    var formData = new FormData();\n    this.props.formOptions.forEach(option => {\n      formData.append(option.key, this.state.formFields[option.key]);\n    });\n\n    axios\n      .post('/api/wuphf', formData)\n      .then(response => {\n        if (response.data === 'OK') {\n          wuphfSentAudio.play();\n        }\n        this.setState({\n          loading: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          errorMsg: error.response.data,\n          loading: false\n        });\n      });\n  }\n\n  handleChange(e) {\n    let formFields = { ...this.state.formFields };\n    formFields[e.target.name] = e.target.value;\n\n    this.setState({\n      formFields\n    });\n  }\n\n  renderFormOptions() {\n    const { formOptions } = this.props;\n\n    let formUI = formOptions.map((option, i) => (\n      <div key={i} className='wuphf-form-input-div'>\n        <label className='wuphf-form-label' htmlFor={option.key}>\n          {option.labelText}\n        </label>\n        {option.inputType === 'textarea' ? (\n          <textarea\n            className='wuphf-form-textarea'\n            id={option.key}\n            name={option.key}\n            placeholder={option.placeholder}\n            onChange={this.handleChange.bind(this)}\n            value={this.state.formFields[option.key]}\n          />\n        ) : (\n          <input\n            className='wuphf-form-input'\n            type={option.inputType}\n            id={option.key}\n            name={option.key}\n            placeholder={option.placeholder}\n            onChange={this.handleChange.bind(this)}\n            value={this.state.formFields[option.key]}\n          />\n        )}\n      </div>\n    ));\n    return formUI;\n  }\n\n  render() {\n    return (\n      <div className='wuphf-form'>\n        <form onSubmit={this.onFormSubmit.bind(this)}>\n          {this.renderFormOptions()}\n          <button className='wuphf-submit-button'>Send Wuphf!</button>\n        </form>\n        <div>{this.state.errorMsg}</div>\n        <div className='loading-spinner'>\n          <ClipLoader\n            size={100}\n            color={'#0102fc'}\n            loading={this.state.loading}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}